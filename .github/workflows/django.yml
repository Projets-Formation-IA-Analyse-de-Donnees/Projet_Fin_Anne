name: Django CI/CD with Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          MONGO_INITDB_ROOT_USERNAME: ${{secrets.MONGO_INITDB_ROOT_USERNAME}}
          MONGO_INITDB_ROOT_PASSWORD: ${{secrets.MONGO_INITDB_ROOT_PASSWORD}}
          MONGO_DB_NAME: ${{secrets.MONGO_DB_NAME}}
          MONGO_URI: ${{secrets.MONGO_URI}}
          SECRET_KEY_DJANGO: ${{secrets.SECRET_KEY_DJANGO}}
          DJANGO_DEBUG: ${{secrets.DJANGO_DEBUG}}
          DJANGO_ALLOWED_HOSTS: ${{secrets.DJANGO_ALLOWED_HOSTS}}

        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
          --health-timeout=30s
          --health-start-period=10s
          --health-retries=5
      

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Afficher la structure du projet
      run: |
        pwd
        ls -R

    - name: Installer Docker et Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
        docker-compose --version
    - name: Créer le fichier .env
      run: |
        cd Talocka
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
        echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
        echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
        echo "MONGO_INITDB_ROOT_USERNAME=${{ secrets.MONGO_INITDB_ROOT_USERNAME }}" >> .env
        echo "MONGO_INITDB_ROOT_PASSWORD=${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}" >> .env
        echo "MONGO_DB_NAME=${{ secrets.MONGO_DB_NAME }}" >> .env
        echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
        echo "SECRET_KEY_DJANGO=${{ secrets.SECRET_KEY_DJANGO }}" >> .env
        echo "DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }}" >> .env
        echo "DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }}" >> .env

        
    - name: Vérifier les variables d’environnement dans Talocka
      run: |
        cd Talocka
        ls -la
        cat .env  # Afficher le contenu pour debug

      

    - name: Démarrer Docker Compose
      run: |
        cd Talocka  # Aller dans le bon répertoire
        docker-compose up -d --build
        docker-compose ps  # Vérifier si les conteneurs tournent

    - name: Exécuter les migrations
      run: |
        cd Talocka
        docker-compose run web python manage.py migrate

    - name: Exécuter les tests Django
      run: |
        cd Talocka
        docker-compose run web python manage.py test

    - name: Arrêter Docker Compose
      run: |
        cd Talocka
        docker-compose down
